Цели и структура курса
Настрока рабочего места. Инсталяция scala, idea, sbt.
Запуск пробного предустановленного проекта

Введение
 Виды яыков. Функциональные языки 
 Scala - multi-paradigm
 Примеры
	Императивный стиль
	Функциональный стиль
Часть 1. 
Типы в скала
 Иерархия типов
 Вывод типов
 Задания
Основные конструкциии языка
 Пакеты 
 Импорты 
	Переименование пакетов	
 Определения
	Константы
	Переменные
	Ленивые декларации
	Функции
		Функции
		Значения по умолчанию
		Процедуры
		Переменная длинна аргументов		
		Функции как значения. Функции высшего порядка.
		Каррированные функции
		Композиция функций одной переменной
		    compose, andThen
		Композиция функций несколькоих переменных
		    curried, tupled
		Call-by-name параметры
            Разрешение циклических зависимостей
        	Повторное вычисление
		Функции. Задания
 Операторы
	Операторы витвления  IF
    Циклы
    Задания
 Pattern Matching
    Синтаксис
    Возможности
    Пример для case class
    Пример для коллекции
    Partial function
    Задания
 Классы
 Кейс классы. 
 Объекты. Кейс объекты. Объекты компаньоны	
 Трейты
 Package Objects
 Исключительные ситуации
   Checked / Unckecked / Fatal / NonFatal
   try{}catch{}
   Try{}  
 Обзор коллекций
		Коллекции в скала
		Traversble. Основные методы
		Примеры коллекций	
 Задания
Scala features
 Tuples    
 Имплиситы.
	Implicit evidence
   	Implicit conversions
    Pimp my library. Примеры из predef.
 Инерполяторы
	String interpolation

ОО часть скалы
		Напоминаем скала - гибрилный язык
		Дженерики. Общая информация.
	type alias
	Понятия: наследование, полиморфизм, инкапсуляция
	Уровни доступа Private public protected. 
	Ограничение досупа(scoped). До пакета. До инстанса. 
	Множественное наследование. Diamond problem.
	Как решено в скале. Линеизация
    Ковариантность. Контрвариантность         
	Структурные типы  
    Полиморфизм в скале (Ad-hoc, duck typing, стратегия, декоратор, cake pattern)

Функции и методы. Наконец 
	Методы в классах трейтах и объектах
	Функции как значения
	Eta conversions
	Комбинаторы над функциями
	Наследование от функций.

Коллекции в деталях
	Иерархия
	Списки
	Последовательности
	Потоки (Streams)
	Карты (Maps)
	Наборы(Set)
	Наиболее распространенные комбинаторы 
	  Map, flatMap, collect
	  tranform,
	  fold, foldLeft, reduceLeft.
	проекции  
        For comprehension

Часть 2. Продвинутая часть
Связь с JAVA.
 Способы исследования сгенерированного кода
	JAD 
	javap
 Ограничения и подводные камни
	инициализация Lazy val
	def vs val и ETA convertion	
 Дженерики. Виртуальные типпы.
	В чем разница между виртуальными типами и дженериками. 
	Existential types
	Конструктор типов
	f-bound polymorphizm
	type lambdas	
Асинхронность в SCALA 
 Futures
	Как выполняеться Future. ExecutionContext
	Комбинаторы над Future
	Fork join Pool
	Promise, зачем он нужен. Примеры применения	
	Связь Future и Try.
 Akka actors
	Что такое актор.	
	Actor System. Конфигурция и применение
	Простой актор
	методы Ask, tell, receive
	SupevisionStrategy. 
	Метод become.	
 Мат. часть
	Понятяие категории. Морфизмы.Функторы.
	Монада и моноид
	Applicative
	Применение в скале.
	Функциональные шаблоны.
	Free monada.
	Trampoline
	Reader monada.
	список для самостоятелььного изучения.

Часть 3. Scala in enterprise 	
	Работа с БД
	    наш фремворк
		slick
	Веб сервисы. ScalaXb
	Взаимодействие по http
	 httpClient. Наше расширение для dispatch.
	 Spray в общих чертах
	Тесты. 	  
	  ScalaTest 
	  Mockito	
	SBT в деталях
